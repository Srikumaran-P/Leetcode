/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */ 
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    if(!l1 && !l2) return l1;
    int carry = 0;
    struct ListNode* head = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->val = 0; // 初始化頭節點
    head->next = NULL;
    struct ListNode* temp = head;

    while(l1 != NULL || l2 != NULL || carry > 0){
        struct ListNode* node = (struct ListNode*)malloc(sizeof(struct ListNode));
        node->next = NULL;
        temp->next = node;
        if(l1 && l2){
            node->val = (l1->val + l2 -> val + carry) % 10;
            if((l1->val + l2 -> val + carry)/10 > 0) carry = 1;
            else carry = 0;
            l1 = l1->next;
            l2 = l2->next;
        }
        else if(l1){
            node->val = (l1->val + carry) % 10;
            if((l1->val + carry)/10 > 0) carry = 1;
            else carry = 0;
            l1 = l1->next;
        }
        else if(l2){
            node->val = (l2->val + carry) % 10;
            if((l2->val + carry)/10 > 0) carry = 1;
            else carry = 0;
            l2 = l2->next;
        }
        else if(carry > 0){
            node->val = carry % 10;
            carry = 0;
        }
        temp = temp->next;
    }
    return head->next;


}
